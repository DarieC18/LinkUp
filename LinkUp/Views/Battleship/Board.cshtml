@model LinkUp.Application.ViewModels.Battleship.BoardVm
@{
    var size = Model.BoardSize <= 0 ? 10 : Model.BoardSize;
}

<style>
    :root {
        --board-max: min(68vmin, 520px);
        --cell-gap: 4px;
    }

    .bs-board {
        display: grid;
        grid-template-columns: repeat(var(--cells), 1fr);
        grid-auto-rows: 1fr;
        gap: var(--cell-gap);
        width: var(--board-max);
        aspect-ratio: 1 / 1;
        background: #f8fafc;
        padding: 6px;
        border: 1px solid #e5e7eb;
        border-radius: .5rem;
    }

        .bs-board .cell {
            width: 100%;
            height: 100%;
            border: 1px solid #e5e7eb;
            border-radius: .35rem;
            transition: background-color .1s ease;
        }

            .bs-board .cell.occupied {
                background: #cbd5e1;
            }

            .bs-board .cell.empty {
                cursor: default;
            }

                .bs-board .cell.empty:hover {
                    background: transparent;
                }
</style>

<h2 class="mb-3">Tu tablero</h2>

@if (!string.IsNullOrWhiteSpace(Model.InfoMessage))
{
    <div class="alert @(Model.IsPlacementComplete ? "alert-success" : "alert-info")">
        @Model.InfoMessage
    </div>
}

<div class="bs-board" id="board" style="--cells:@size">
    @for (var r = 0; r < size; r++)
    {
        for (var c = 0; c < size; c++)
        {
            var isShip = Model.Occupied[r, c];
            var cls = isShip ? "occupied" : "empty";
            <div class="cell @cls" data-row="@r" data-col="@c"></div>
        }
    }
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Volver</a>
</div>
